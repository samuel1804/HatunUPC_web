//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HatunsolDAO
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SG_FerreteriaEntities : DbContext
    {
        public SG_FerreteriaEntities()
            : base("name=SG_FerreteriaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<SG_Articulo> SG_Articulo { get; set; }
        public virtual DbSet<SG_Carta_Aprobacion> SG_Carta_Aprobacion { get; set; }
        public virtual DbSet<SG_Categoria> SG_Categoria { get; set; }
        public virtual DbSet<SG_Dominio> SG_Dominio { get; set; }
        public virtual DbSet<SG_Especialidad> SG_Especialidad { get; set; }
        public virtual DbSet<SG_Establecimiento> SG_Establecimiento { get; set; }
        public virtual DbSet<SG_Establecimiento_Articulo> SG_Establecimiento_Articulo { get; set; }
        public virtual DbSet<SG_GuiaDespacho_Articulo> SG_GuiaDespacho_Articulo { get; set; }
        public virtual DbSet<SG_GuiaRemision_Articulo> SG_GuiaRemision_Articulo { get; set; }
        public virtual DbSet<SG_InformeVisita> SG_InformeVisita { get; set; }
        public virtual DbSet<SG_Ingeniero> SG_Ingeniero { get; set; }
        public virtual DbSet<SG_Maestro> SG_Maestro { get; set; }
        public virtual DbSet<SG_Maestro_Obra> SG_Maestro_Obra { get; set; }
        public virtual DbSet<SG_Marca> SG_Marca { get; set; }
        public virtual DbSet<SG_Obra> SG_Obra { get; set; }
        public virtual DbSet<SG_Obra_Material> SG_Obra_Material { get; set; }
        public virtual DbSet<SG_Option> SG_Option { get; set; }
        public virtual DbSet<SG_OrdenCompra> SG_OrdenCompra { get; set; }
        public virtual DbSet<SG_OrdenCompra_Articulo> SG_OrdenCompra_Articulo { get; set; }
        public virtual DbSet<SG_Parametro> SG_Parametro { get; set; }
        public virtual DbSet<SG_PresupuestoMaterial_Articulo> SG_PresupuestoMaterial_Articulo { get; set; }
        public virtual DbSet<SG_PresupuestoMo> SG_PresupuestoMo { get; set; }
        public virtual DbSet<SG_PresupuestoMo_Maestro> SG_PresupuestoMo_Maestro { get; set; }
        public virtual DbSet<SG_Proveedor> SG_Proveedor { get; set; }
        public virtual DbSet<SG_Proveedor_Articulo> SG_Proveedor_Articulo { get; set; }
        public virtual DbSet<SG_Rol> SG_Rol { get; set; }
        public virtual DbSet<SG_Rol_Option> SG_Rol_Option { get; set; }
        public virtual DbSet<SG_Solicitud_Persona> SG_Solicitud_Persona { get; set; }
        public virtual DbSet<SG_User> SG_User { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<SG_PresupuestoMaterial> SG_PresupuestoMaterial { get; set; }
        public virtual DbSet<SG_Solicitud> SG_Solicitud { get; set; }
        public virtual DbSet<SG_GuiaDespacho> SG_GuiaDespacho { get; set; }
        public virtual DbSet<SG_GuiaRemision> SG_GuiaRemision { get; set; }
        public virtual DbSet<SG_Ubigeo> SG_Ubigeo { get; set; }
        public virtual DbSet<SG_Persona> SG_Persona { get; set; }
        public virtual DbSet<SG_Promocion> SG_Promocion { get; set; }
        public virtual DbSet<SG_Promocion_Articulo> SG_Promocion_Articulo { get; set; }
    
        public virtual ObjectResult<sp_Maestro_Obra_Listar_Result> sp_Maestro_Obra_Listar(Nullable<int> idObra, Nullable<decimal> area)
        {
            var idObraParameter = idObra.HasValue ?
                new ObjectParameter("IdObra", idObra) :
                new ObjectParameter("IdObra", typeof(int));
    
            var areaParameter = area.HasValue ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Maestro_Obra_Listar_Result>("sp_Maestro_Obra_Listar", idObraParameter, areaParameter);
        }
    
        public virtual ObjectResult<sp_PresupuestoArticulo_Result> sp_PresupuestoArticulo(Nullable<decimal> cantidad, Nullable<int> idObra)
        {
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));
    
            var idObraParameter = idObra.HasValue ?
                new ObjectParameter("IdObra", idObra) :
                new ObjectParameter("IdObra", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PresupuestoArticulo_Result>("sp_PresupuestoArticulo", cantidadParameter, idObraParameter);
        }
    
        public virtual ObjectResult<sp_Presupuesto_Material_Detalle_Result> sp_Presupuesto_Material_Detalle(Nullable<decimal> cantidad, Nullable<int> idObra, Nullable<int> idEstablecimiento)
        {
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));
    
            var idObraParameter = idObra.HasValue ?
                new ObjectParameter("IdObra", idObra) :
                new ObjectParameter("IdObra", typeof(int));
    
            var idEstablecimientoParameter = idEstablecimiento.HasValue ?
                new ObjectParameter("IdEstablecimiento", idEstablecimiento) :
                new ObjectParameter("IdEstablecimiento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Presupuesto_Material_Detalle_Result>("sp_Presupuesto_Material_Detalle", cantidadParameter, idObraParameter, idEstablecimientoParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<sp_PresupuestoMaterial_Result> sp_PresupuestoMaterial(Nullable<decimal> cantidad, Nullable<int> idObra, string latitud, string longitud)
        {
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));
    
            var idObraParameter = idObra.HasValue ?
                new ObjectParameter("IdObra", idObra) :
                new ObjectParameter("IdObra", typeof(int));
    
            var latitudParameter = latitud != null ?
                new ObjectParameter("Latitud", latitud) :
                new ObjectParameter("Latitud", typeof(string));
    
            var longitudParameter = longitud != null ?
                new ObjectParameter("Longitud", longitud) :
                new ObjectParameter("Longitud", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PresupuestoMaterial_Result>("sp_PresupuestoMaterial", cantidadParameter, idObraParameter, latitudParameter, longitudParameter);
        }
    
        public virtual ObjectResult<sp_ArticulosBajaRotacion_Result> sp_ArticulosBajaRotacion(string fechaInicio, string fechaFin)
        {
            var fechaInicioParameter = fechaInicio != null ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(string));
    
            var fechaFinParameter = fechaFin != null ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ArticulosBajaRotacion_Result>("sp_ArticulosBajaRotacion", fechaInicioParameter, fechaFinParameter);
        }
    }
}
